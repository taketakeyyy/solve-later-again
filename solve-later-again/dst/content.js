!function(e){var n={};function t(_){if(n[_])return n[_].exports;var r=n[_]={i:_,l:!1,exports:{}};return e[_].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=e,t.c=n,t.d=function(e,n,_){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:_})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var _=Object.create(null);if(t.r(_),Object.defineProperty(_,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(_,r,function(n){return e[n]}.bind(null,r));return _},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s="./src/content.js")}({"./src/click.js":
/*!**********************!*\
  !*** ./src/click.js ***!
  \**********************/
/*! exports provided: click_again_btn_sla, click_del_btn_sla, click_chkbox_sla, click_chkbox_solved_sla */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "click_again_btn_sla", function() { return click_again_btn_sla; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "click_del_btn_sla", function() { return click_del_btn_sla; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "click_chkbox_sla", function() { return click_chkbox_sla; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "click_chkbox_solved_sla", function() { return click_chkbox_solved_sla; });\n/* harmony import */ var _dom_operations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom_operations.js */ "./src/dom_operations.js");\n\n\n\n\nvar consts = __webpack_require__(/*! ./consts.js */ "./src/consts.js"); // [START function]\n\n\nfunction click_again_btn_sla(e) {\n  /* Againボタンをクリックしたときの処理 \r\n    * SLAのテーブルのこの問題を初期状態に戻す\r\n    Args:\r\n      e(event): クリックされたボタンのイベント\r\n  */\n  var problem_name = e.target.getAttribute("id").slice(consts.ID_AGAIN_BTN_SLA_.length);\n  Object(_dom_operations_js__WEBPACK_IMPORTED_MODULE_0__["initialize_problem_status"])(problem_name);\n\n  for (var i = 1; i < consts.SOLVED_MAX + 1; i++) {\n    Object(_dom_operations_js__WEBPACK_IMPORTED_MODULE_0__["unhilight_problem"])(problem_name, i);\n  }\n\n  save_solve_later_again(problem_name);\n} // [END function]\n// [START function]\n\nfunction click_del_btn_sla(e) {\n  /* Deleteボタンをクリックしたときの処理 \r\n    * SLAのテーブルからこの問題を削除する\r\n  * この問題のチェックボックスのチェックを外す\r\n    Args:\r\n      e(event): クリックされたボタンのイベント\r\n  */\n  var problem_name = e.target.getAttribute("id").slice(consts.ID_DEL_BTN_SLA_.length); // SLAのテーブルからこの問題を削除する\n\n  var del_tr = document.getElementById(consts.ID_TR_SLA_ + problem_name);\n  del_tr.parentNode.removeChild(del_tr); // この問題のチェックボックスのチェックを外す\n\n  var chkbox = document.getElementById(consts.ID_CHKBOX_SLA_ + problem_name);\n  chkbox.checked = false; // 現在のテーブル状態を保存する\n\n  save_solve_later_again(problem_name);\n} // [END function]\n// [START function]\n\nfunction click_chkbox_sla(e) {\n  /* 問題のチェックボックスがクリックされたときの処理\r\n  Args:\r\n      e(event): クリックされたチェックボックスのイベント\r\n  */\n  var problem_name = e.target.getAttribute("id").slice(consts.ID_CHKBOX_SLA_.length);\n\n  if (e.target.checked) {\n    // SLAテーブルにこの問題を追加する\n    var a_tag = e.target.parentNode.getElementsByTagName("a")[0].cloneNode(true);\n    Object(_dom_operations_js__WEBPACK_IMPORTED_MODULE_0__["make_new_tr_sla"])(problem_name, a_tag);\n  } else {\n    // SLAテーブルからこの問題を削除する\n    var elem_del = document.getElementById(consts.ID_TR_SLA_ + problem_name);\n    elem_del.parentNode.removeChild(elem_del);\n  } // 現在のテーブル状態を保存する\n\n\n  save_solve_later_again(problem_name);\n} // [END function]\n// [START function]\n\nfunction save_solve_later_again(problem_name) {\n  /*\r\n  SLAテーブルの状態を保存する\r\n    Args:\r\n      problem_name(str): コンテスト名 (abc131_a)\r\n    Notes:\r\n      保存形式は、以下のような感じ。\r\n          - チェックボックスのとき、null\r\n          - 日付が入ってる場合、それをstr型で保存\r\n      例\r\n      {sla_abc131_a: {"solved1": "2019/4/21(Sun)"}, {"solved2": null}, {"solved3": null}}\r\n    Refs:\r\n      https://dackdive.hateblo.jp/entry/2017/07/27/100000\r\n      https://github.com/taketakeyyy/my-practice/blob/master/dotinstall/MyExtensions/04_OptionsUI/options.js\r\n  */\n  var sla_id = "sla_" + problem_name;\n\n  if (document.getElementById(consts.ID_TR_SLA_ + problem_name) === null) {\n    // SLAテーブルに要素が存在しないなら、データを削除する\n    chrome.storage.sync.remove(sla_id);\n    return true;\n  } // SLAテーブルに要素が存在するなら、現在の状態を保存する\n\n\n  var saving_data = {};\n  saving_data[sla_id] = {};\n\n  for (var i = 1; i <= consts.SOLVED_MAX; i++) {\n    var chkbox = document.getElementById("chkbox_solved" + String(i) + "_" + sla_id);\n\n    if (chkbox === null) {\n      var div = document.getElementById("date_solved" + String(i) + "_" + sla_id);\n      saving_data[sla_id]["solved" + String(i)] = div.innerText;\n      continue;\n    }\n\n    saving_data[sla_id]["solved" + String(i)] = null;\n  }\n\n  chrome.storage.sync.set(saving_data);\n} // [END function]\n// [START function]\n\n\nfunction click_chkbox_solved_sla(e) {\n  /* Solved Later Againテーブルの Solved のチェックボックスをクリックしたときの処理\r\n  \r\n  * Solved1のチェックが入ったら、クリックされた年月日をいれて、Solved2をクリック可能にする\r\n  * Solved2のチェックが入ったら、クリックされた年月日をいれて、Solved3をクリック可能にする\r\n  * Solved3のチェックが入ったら、クリックされた年月日をいれる\r\n    Args:\r\n      e(event): クリックされたチェックボックスのイベント\r\n  */\n  // このチェックボックスのidは、"chkbox_solved*_sla_project_problem"\n  var problem_name = e.target.getAttribute("id").slice(consts.ID_CHKBOX_SOLVED1_SLA_.length);\n  var solved_num = parseInt(e.target.getAttribute("id")["chkbox_solved".length], 10);\n\n  var func = function func(solved_num) {\n    var now = new Date();\n    var year = now.getFullYear();\n    var month = now.getMonth();\n    var day = now.getDate();\n    var wday = now.getDay();\n    var td = e.target.parentNode;\n    td.innerText = "";\n    var div = document.createElement("div");\n    div.setAttribute("id", "date_solved" + String(solved_num) + "_sla_" + problem_name);\n    div.innerText = year + "/" + (month + 1) + "/" + day + "(" + consts.WDAYS[wday] + ")";\n    td.appendChild(div);\n\n    if (solved_num < consts.SOLVED_MAX) {\n      var chkbox_solved_next = document.getElementById("chkbox_solved" + (solved_num + 1) + "_sla_" + problem_name);\n      chkbox_solved_next.disabled = false;\n    }\n  };\n\n  func(solved_num);\n  Object(_dom_operations_js__WEBPACK_IMPORTED_MODULE_0__["unhilight_problem"])(problem_name, solved_num); // 現在のテーブル状態を保存する\n\n  save_solve_later_again(problem_name);\n} // [END function]\n\n//# sourceURL=webpack:///./src/click.js?')},"./src/consts.js":
/*!***********************!*\
  !*** ./src/consts.js ***!
  \***********************/
/*! exports provided: SOLVED_MAX, ABC_COL_NUM, ARC_COL_NUM, AGC_COL_NUM, ID_SLA_ROOT, ID_TR_SLA_, ID_CHKBOX_SOLVED1_SLA_, ID_CHKBOX_SOLVED2_SLA_, ID_CHKBOX_SOLVED3_SLA_, ID_DEL_BTN_SLA_, ID_AGAIN_BTN_SLA_, ID_DATE_SOLVED1_SLA_, ID_DATE_SOLVED2_SLA_, ID_DATE_SOLVED3_SLA_, ID_CHKBOX_SLA_, SOLVED2_DAYS, SOLVED3_DAYS, WDAYS, HILIGHT_CLR_TR, HILIGHT_CLR_TD, CAN_MAKE_CHKBOX_WAIT_MSEC, CAN_MAKE_CHKBOX_RETRY_COUNT */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SOLVED_MAX", function() { return SOLVED_MAX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ABC_COL_NUM", function() { return ABC_COL_NUM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ARC_COL_NUM", function() { return ARC_COL_NUM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AGC_COL_NUM", function() { return AGC_COL_NUM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ID_SLA_ROOT", function() { return ID_SLA_ROOT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ID_TR_SLA_", function() { return ID_TR_SLA_; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ID_CHKBOX_SOLVED1_SLA_", function() { return ID_CHKBOX_SOLVED1_SLA_; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ID_CHKBOX_SOLVED2_SLA_", function() { return ID_CHKBOX_SOLVED2_SLA_; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ID_CHKBOX_SOLVED3_SLA_", function() { return ID_CHKBOX_SOLVED3_SLA_; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ID_DEL_BTN_SLA_", function() { return ID_DEL_BTN_SLA_; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ID_AGAIN_BTN_SLA_", function() { return ID_AGAIN_BTN_SLA_; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ID_DATE_SOLVED1_SLA_", function() { return ID_DATE_SOLVED1_SLA_; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ID_DATE_SOLVED2_SLA_", function() { return ID_DATE_SOLVED2_SLA_; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ID_DATE_SOLVED3_SLA_", function() { return ID_DATE_SOLVED3_SLA_; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ID_CHKBOX_SLA_", function() { return ID_CHKBOX_SLA_; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SOLVED2_DAYS", function() { return SOLVED2_DAYS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SOLVED3_DAYS", function() { return SOLVED3_DAYS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WDAYS", function() { return WDAYS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HILIGHT_CLR_TR", function() { return HILIGHT_CLR_TR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HILIGHT_CLR_TD", function() { return HILIGHT_CLR_TD; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CAN_MAKE_CHKBOX_WAIT_MSEC", function() { return CAN_MAKE_CHKBOX_WAIT_MSEC; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CAN_MAKE_CHKBOX_RETRY_COUNT", function() { return CAN_MAKE_CHKBOX_RETRY_COUNT; });\n\n\nvar SOLVED_MAX = 3; // Solved3 まで\n\nvar ABC_COL_NUM = 7; // ABCの列数\n\nvar ARC_COL_NUM = 5; // ARCの列数\n\nvar AGC_COL_NUM = 8; // AGCの列数\n\nvar ID_SLA_ROOT = "sla_root"; // Solve Later Again(SLA)テーブルのdivのid\n\nvar ID_TR_SLA_ = "tr_sla_"; // SLAテーブルのtr要素のidのprefix (tr_sla_abc131_a)\n\nvar ID_CHKBOX_SOLVED1_SLA_ = "chkbox_solved1_sla_"; // SLAテーブルのSolved1列のチェックボックスのIDのprefix (chkbox_solved1_sla_abc131_a)\n\nvar ID_CHKBOX_SOLVED2_SLA_ = "chkbox_solved2_sla_"; // SLAテーブルのSolved2列のチェックボックスのIDのprefix (chkbox_solved2_sla_abc131_a)\n\nvar ID_CHKBOX_SOLVED3_SLA_ = "chkbox_solved3_sla_"; // SLAテーブルのSolved3列のチェックボックスのIDのprefix (chkbox_solved3_sla_abc131_a)\n\nvar ID_DEL_BTN_SLA_ = "del_btn_sla_"; // SLAテーブルのDeleteボタンのIDのprefix (del_btn_sla_abc131_a)\n\nvar ID_AGAIN_BTN_SLA_ = "again_btn_sla_"; // SLAテーブルのAgainボタンのIDのprefix (again_btn_sla_abc131_a)\n\nvar ID_DATE_SOLVED1_SLA_ = "date_solved1_sla_"; // SLAテーブルの問題を解いたときの年月日のdivのidのprefix (date_solved1_sla_abc131_a)\n\nvar ID_DATE_SOLVED2_SLA_ = "date_solved2_sla_"; // SLAテーブルの問題を解いたときの年月日のdivのidのprefix (date_solved2_sla_abc131_a)\n\nvar ID_DATE_SOLVED3_SLA_ = "date_solved3_sla_"; // SLAテーブルの問題を解いたときの年月日のdivのidのprefix (date_solved3_sla_abc131_a)\n\nvar ID_CHKBOX_SLA_ = "chkbox_sla_"; // 各問題のチェックボックスのIDのprefix (chkbox_sla_abc131_a)\n\nvar SOLVED2_DAYS = 7; // Solved2 はX日後に解き直す\n\nvar SOLVED3_DAYS = 30; // Solved3 はX日後に解き直す\n\nvar WDAYS = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];\nvar HILIGHT_CLR_TR = "#f5b88791";\nvar HILIGHT_CLR_TD = "#f7964891";\nvar CAN_MAKE_CHKBOX_WAIT_MSEC = 1000; // ページのDOMが構成されるのを待つミリ秒\n\nvar CAN_MAKE_CHKBOX_RETRY_COUNT = 60; // ページのDOMが構成されるのを待つリトライ回数\n\n//# sourceURL=webpack:///./src/consts.js?')},"./src/content.js":
/*!************************!*\
  !*** ./src/content.js ***!
  \************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('(function () {\n  // スコープの汚染を防ぐため、即時関数で囲む\n  \'use strict\';\n\n  var dom_ope = __webpack_require__(/*! ./dom_operations.js */ "./src/dom_operations.js");\n\n  var consts = __webpack_require__(/*! ./consts.js */ "./src/consts.js"); // [START function]\n\n  /* ABC, ARC, AGCの各問題のDOMが構築されているかをチェックする\r\n  *   Args:\r\n  *       elem_h2: テーブルのh2要素\r\n  */\n\n\n  function _exist_doms(elem_h2) {\n    var root_div = elem_h2.parentNode;\n    var tbody = root_div.getElementsByTagName("tbody")[0];\n    var tds = tbody.getElementsByTagName("td");\n\n    if (tds.length === 1) {\n      // DOMがまだ構成されていない場合\n      return false;\n    }\n\n    return true;\n  } // [END function]\n  // [START function]\n\n\n  function _can_make_checkboxes() {\n    /* 各問題に、Solve Later Againテーブルに問題を追加するためのチェックボックス要素を作成するための準備ができているか？\r\n    DOMが構成されているかのチェックをする\r\n    */\n    var h2s = document.getElementsByTagName("h2");\n    var is_success = true;\n\n    for (var i = 0; i < h2s.length; i++) {\n      if (h2s[i].innerText == "AtCoder Beginner Contest") {\n        is_success &= _exist_doms(h2s[i]);\n      } else if (h2s[i].innerText == "AtCoder Regular Contest") {\n        is_success &= _exist_doms(h2s[i]);\n      } else if (h2s[i].innerText == "AtCoder Grand Contest") {\n        is_success &= _exist_doms(h2s[i]);\n      }\n    }\n\n    if (!is_success) {\n      return false;\n    }\n\n    return true;\n  } // [END function]\n  // [START function]\n\n\n  function async_load_storage() {\n    return new Promise(function (resolve, reject) {\n      chrome.storage.sync.get(null, function (loaded_data) {\n        for (var sla_id in loaded_data) {\n          // SLAテーブルにtr要素を作成する\n          var target_chkbox = document.getElementById("chkbox_" + sla_id);\n          var a_tag = target_chkbox.parentNode.getElementsByTagName("a")[0].cloneNode(true);\n          dom_ope.make_new_tr_sla(sla_id.slice(4), a_tag); // tr要素のSolved列が年月日の場合はそれに変更する\n\n          for (var i = 1; i <= consts.SOLVED_MAX; i++) {\n            var solved_date = loaded_data[sla_id]["solved" + String(i)];\n\n            if (solved_date === null) {\n              continue;\n            }\n\n            var parent_td = document.getElementById("chkbox_solved" + String(i) + "_" + sla_id).parentNode;\n            parent_td.innerText = "";\n            var div = document.createElement("div");\n            div.setAttribute("id", "date_solved" + String(i) + "_" + sla_id);\n            div.innerText = solved_date;\n            parent_td.appendChild(div);\n          } // tr要素のSolved列のチェックボックスの中で、クリック可能にするものを決定する\n\n\n          for (var _i = 1; _i <= consts.SOLVED_MAX; _i++) {\n            var chkbox = document.getElementById("chkbox_solved" + String(_i) + "_" + sla_id);\n\n            if (chkbox === null) {\n              continue;\n            }\n\n            chkbox.disabled = false;\n            break;\n          } // 問題のチェックボックスにチェックを入れる\n\n\n          target_chkbox.checked = true;\n        }\n\n        resolve();\n        return;\n      });\n    });\n  } // [END function]\n  // [START function]\n\n\n  function on_fullfilled_can_make_checkboxes() {\n    // make_checkboxes()が正常に成功した or リトライ回数を超えたら、しょうがないので諦めてそのまま次の処理へ。\n    // 各ABC, ARC, AGC等の問題にチェックボックスをつける\n    return Promise.resolve().then(function () {\n      dom_ope.make_checkboxes();\n    }).then(async_load_storage).then(dom_ope.hilight_problems);\n  } // [END function]\n  // [START function]\n\n\n  function on_rejected_can_make_checkboxes(try_count) {\n    // make_checkboxes()に失敗したときの処理\n    setTimeout(function () {\n      async_can_make_checkboxes(try_count).then(on_fullfilled_can_make_checkboxes, on_rejected_can_make_checkboxes);\n    }, consts.CAN_MAKE_CHKBOX_WAIT_MSEC);\n  }\n\n  ; // [END function]\n  // [START function]\n\n  function async_can_make_checkboxes(try_count) {\n    /* ページのDOMが構築されるまで処理を待つ */\n    return new Promise(function (resolve, reject) {\n      var is_success = _can_make_checkboxes();\n\n      if (is_success || try_count === 0) {\n        resolve();\n        return;\n      }\n\n      reject(--try_count);\n      return;\n    });\n  }\n\n  ; // [END function]\n\n  chrome.runtime.onMessage.addListener(function (msg, sender, sendResponse) {\n    if (document.getElementById(consts.ID_SLA_ROOT) !== null) {\n      return false;\n    }\n\n    var root_div = document.getElementById(\'root\');\n    var target_div = root_div.firstElementChild.getElementsByClassName("container")[0].firstElementChild;\n    var insert_html = dom_ope.make_base_html();\n    target_div.insertBefore(insert_html, target_div.firstChild);\n    async_can_make_checkboxes(consts.CAN_MAKE_CHKBOX_RETRY_COUNT).then(on_fullfilled_can_make_checkboxes, on_rejected_can_make_checkboxes);\n  });\n})();\n\n//# sourceURL=webpack:///./src/content.js?')},"./src/dom_operations.js":
/*!*******************************!*\
  !*** ./src/dom_operations.js ***!
  \*******************************/
/*! exports provided: make_checkboxes, make_base_html, make_new_tr_sla, initialize_problem_status, hilight_problems, unhilight_problem */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "make_checkboxes", function() { return make_checkboxes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "make_base_html", function() { return make_base_html; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "make_new_tr_sla", function() { return make_new_tr_sla; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initialize_problem_status", function() { return initialize_problem_status; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hilight_problems", function() { return hilight_problems; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unhilight_problem", function() { return unhilight_problem; });\n/* harmony import */ var _click_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./click.js */ "./src/click.js");\n\n\n\n\nvar consts = __webpack_require__(/*! ./consts.js */ "./src/consts.js"); //[START function]\n\n\nfunction _append_checkboxes(elem_h2, col_num) {\n  /* ABC, ARC, AGCの各問題にチェックボックス要素を追加する\r\n  Args:\r\n      elem_h2: テーブルのh2要素\r\n      col_num(int): テーブルの列数\r\n  */\n  var root_div = elem_h2.parentNode;\n  var tbody = root_div.getElementsByTagName("tbody")[0];\n  var tds = tbody.getElementsByTagName("td");\n  var now_contest_name = "";\n\n  for (var i = 0; i < tds.length; i++) {\n    if (!tds[i].hasAttribute("tabindex")) {\n      continue;\n    }\n\n    if (typeof tds[i].getElementsByTagName("a")[0] === "undefined") {\n      // 問題が存在しないとき、チェックボックスは入れない\n      continue;\n    }\n\n    var tabindex = parseInt(tds[i].getAttribute("tabindex"));\n\n    if (tabindex % col_num === 1) {\n      // contest の列なので、チェックボックスは入れない\n      now_contest_name = tds[i].getElementsByTagName("a")[0].innerText.toLowerCase();\n      continue;\n    }\n\n    var checkbox = document.createElement("input");\n    checkbox.setAttribute("type", "checkbox");\n    checkbox.checked = false;\n    checkbox.addEventListener("click", _click_js__WEBPACK_IMPORTED_MODULE_0__["click_chkbox_sla"]);\n\n    if (col_num === consts.ABC_COL_NUM) {\n      // ABCのとき\n      if (tabindex % col_num === 2) {\n        checkbox.setAttribute("id", consts.ID_CHKBOX_SLA_ + now_contest_name + "_" + "a");\n      } else if (tabindex % col_num === 3) {\n        checkbox.setAttribute("id", consts.ID_CHKBOX_SLA_ + now_contest_name + "_" + "b");\n      } else if (tabindex % col_num === 4) {\n        checkbox.setAttribute("id", consts.ID_CHKBOX_SLA_ + now_contest_name + "_" + "c");\n      } else if (tabindex % col_num === 5) {\n        checkbox.setAttribute("id", consts.ID_CHKBOX_SLA_ + now_contest_name + "_" + "d");\n      } else if (tabindex % col_num === 6) {\n        checkbox.setAttribute("id", consts.ID_CHKBOX_SLA_ + now_contest_name + "_" + "e");\n      } else if (tabindex % col_num === 0) {\n        checkbox.setAttribute("id", consts.ID_CHKBOX_SLA_ + now_contest_name + "_" + "f");\n      }\n\n      tds[i].insertBefore(checkbox, tds[i].firstChild);\n      continue;\n    } else if (col_num === consts.ARC_COL_NUM) {\n      // ARCのとき\n      if (tabindex % col_num === 2) {\n        checkbox.setAttribute("id", consts.ID_CHKBOX_SLA_ + now_contest_name + "_" + "a");\n      } else if (tabindex % col_num === 3) {\n        checkbox.setAttribute("id", consts.ID_CHKBOX_SLA_ + now_contest_name + "_" + "b");\n      } else if (tabindex % col_num === 4) {\n        checkbox.setAttribute("id", consts.ID_CHKBOX_SLA_ + now_contest_name + "_" + "c");\n      } else if (tabindex % col_num === 0) {\n        checkbox.setAttribute("id", consts.ID_CHKBOX_SLA_ + now_contest_name + "_" + "d");\n      }\n\n      tds[i].insertBefore(checkbox, tds[i].firstChild);\n      continue;\n    } else if (col_num === consts.AGC_COL_NUM) {\n      // AGCのとき\n      if (tabindex % col_num === 2) {\n        checkbox.setAttribute("id", consts.ID_CHKBOX_SLA_ + now_contest_name + "_" + "a");\n      } else if (tabindex % col_num === 3) {\n        checkbox.setAttribute("id", consts.ID_CHKBOX_SLA_ + now_contest_name + "_" + "b");\n      } else if (tabindex % col_num === 4) {\n        checkbox.setAttribute("id", consts.ID_CHKBOX_SLA_ + now_contest_name + "_" + "c");\n      } else if (tabindex % col_num === 5) {\n        checkbox.setAttribute("id", consts.ID_CHKBOX_SLA_ + now_contest_name + "_" + "d");\n      } else if (tabindex % col_num === 6) {\n        checkbox.setAttribute("id", consts.ID_CHKBOX_SLA_ + now_contest_name + "_" + "e");\n      } else if (tabindex % col_num === 7) {\n        checkbox.setAttribute("id", consts.ID_CHKBOX_SLA_ + now_contest_name + "_" + "f");\n      } else if (tabindex % col_num === 0) {\n        checkbox.setAttribute("id", consts.ID_CHKBOX_SLA_ + now_contest_name + "_" + "f2");\n      }\n\n      tds[i].insertBefore(checkbox, tds[i].firstChild);\n      continue;\n    }\n  }\n} //[END function]\n//[START function]\n\n\nfunction _append_checkboxes_other_contests() {\n  /* Other Contests(企業コン)の各問題にチェックボックス要素を追加する */\n  var divs = document.getElementsByClassName("table-responsive");\n\n  for (var i = 0; i < divs.length; i++) {\n    var target_tbody = divs[i].getElementsByTagName("tbody")[0];\n    var target_tr = target_tbody.getElementsByTagName("tr")[0];\n    var tds = target_tr.getElementsByTagName("td");\n\n    for (var j = 0; j < tds.length; j++) {\n      var a = tds[j].getElementsByTagName("a")[0];\n      var href_texts = a.getAttribute("href").split("/");\n      var problem_name = href_texts[href_texts.length - 1];\n      var checkbox = document.createElement("input");\n      checkbox.setAttribute("type", "checkbox");\n      checkbox.checked = false;\n      checkbox.addEventListener("click", _click_js__WEBPACK_IMPORTED_MODULE_0__["click_chkbox_sla"]);\n      checkbox.setAttribute("id", consts.ID_CHKBOX_SLA_ + problem_name);\n      tds[j].insertBefore(checkbox, tds[j].firstChild);\n    }\n  }\n} //[END function]\n//[START function]\n\n\nfunction make_checkboxes() {\n  /* 各問題に、Solve Later Againテーブルに問題を追加するためのチェックボックス要素を作成する */\n  var h2s = document.getElementsByTagName("h2");\n\n  for (var i = 0; i < h2s.length; i++) {\n    if (h2s[i].innerText == "AtCoder Beginner Contest") {\n      _append_checkboxes(h2s[i], consts.ABC_COL_NUM);\n    } else if (h2s[i].innerText == "AtCoder Regular Contest") {\n      _append_checkboxes(h2s[i], consts.ARC_COL_NUM);\n    } else if (h2s[i].innerText == "AtCoder Grand Contest") {\n      _append_checkboxes(h2s[i], consts.AGC_COL_NUM);\n    }\n  }\n\n  _append_checkboxes_other_contests();\n} //[END function]\n//[START function]\n\nfunction make_base_html() {\n  /* Solve Later Again セクションの基本的なHTMLを作成する */\n  var html = document.createElement("div");\n  html.setAttribute("id", consts.ID_SLA_ROOT);\n  html.classList.add("row");\n  var h2 = document.createElement("h2");\n  h2.textContent = "Solve Later Again";\n  html.appendChild(h2);\n  var div_react_bs_table_container = document.createElement("div");\n  div_react_bs_table_container.classList.add("react-bs-table-container");\n  html.appendChild(div_react_bs_table_container);\n  var div_react_bs_table = document.createElement("div");\n  div_react_bs_table.classList.add("react-bs-table");\n  div_react_bs_table.classList.add("react-bs-table-bordered");\n  div_react_bs_table_container.appendChild(div_react_bs_table);\n  var div_s_alert_wrapper = document.createElement("div");\n  div_s_alert_wrapper.classList.add("s-alert-wrapper");\n  div_react_bs_table_container.appendChild(div_s_alert_wrapper);\n  var div_react_bs_container_header = document.createElement("div");\n  div_react_bs_container_header.classList.add("react-bs-container-header");\n  div_react_bs_container_header.classList.add("table-header-wrapper");\n  div_react_bs_table.appendChild(div_react_bs_container_header);\n  var div_react_bs_container_body = document.createElement("div");\n  div_react_bs_container_body.classList.add("react-bs-container-body");\n  div_react_bs_table.appendChild(div_react_bs_container_body);\n  var table_container_header = document.createElement("table");\n  table_container_header.classList.add("table");\n  table_container_header.classList.add("table-hover");\n  table_container_header.classList.add("table-bordered");\n  div_react_bs_container_header.appendChild(table_container_header);\n  var table_container_body = document.createElement("table");\n  table_container_body.classList.add("table");\n  table_container_body.classList.add("table-bordered");\n  div_react_bs_container_body.appendChild(table_container_body);\n  var colgroup_container_header = document.createElement("colgroup");\n  table_container_header.appendChild(colgroup_container_header);\n  var colgroup_container_body = document.createElement("colgroup");\n  table_container_body.appendChild(colgroup_container_body);\n  var col_header1 = document.createElement("col");\n  var col_header2 = document.createElement("col");\n  var col_header3 = document.createElement("col");\n  var col_header4 = document.createElement("col");\n  var col_header5 = document.createElement("col");\n  colgroup_container_header.appendChild(col_header1);\n  colgroup_container_header.appendChild(col_header2);\n  colgroup_container_header.appendChild(col_header3);\n  colgroup_container_header.appendChild(col_header4);\n  colgroup_container_header.appendChild(col_header5);\n  var col_body1 = document.createElement("col");\n  var col_body2 = document.createElement("col");\n  var col_body3 = document.createElement("col");\n  var col_body4 = document.createElement("col");\n  var col_body5 = document.createElement("col");\n  colgroup_container_body.appendChild(col_body1);\n  colgroup_container_body.appendChild(col_body2);\n  colgroup_container_body.appendChild(col_body3);\n  colgroup_container_body.appendChild(col_body4);\n  colgroup_container_body.appendChild(col_body5);\n  var thead = document.createElement("thead");\n  table_container_header.appendChild(thead);\n  var tr_thead = document.createElement("tr");\n  thead.appendChild(tr_thead);\n  var th_problem = document.createElement("th");\n  th_problem.textContent = "Problem";\n  tr_thead.appendChild(th_problem);\n  var th_solved1 = document.createElement("th");\n  th_solved1.textContent = "Solved 1";\n  tr_thead.appendChild(th_solved1);\n  var th_solved2 = document.createElement("th");\n  th_solved2.textContent = "Solved 2 (" + String(consts.SOLVED2_DAYS) + " Days Later)";\n  tr_thead.appendChild(th_solved2);\n  var th_solved3 = document.createElement("th");\n  th_solved3.textContent = "Solved 3 (" + String(consts.SOLVED3_DAYS) + " Days Later)";\n  tr_thead.appendChild(th_solved3);\n  var th_buttons = document.createElement("th");\n  th_buttons.textContent = "Buttons";\n  th_buttons.colSpan = "2";\n  tr_thead.appendChild(th_buttons);\n  var tbody = document.createElement("tbody");\n  table_container_body.appendChild(tbody);\n  return html;\n} //[END function]\n//[START function]\n\nfunction make_new_tr_sla(problem_name, a_tag) {\n  // SLAテーブルの新しいtr要素を作成する\n  var tr = document.createElement("tr");\n  tr.setAttribute("id", consts.ID_TR_SLA_ + problem_name);\n  var td1 = document.createElement("td");\n  td1.appendChild(a_tag); // Solved1, 2, 3の td要素。あとで初期化する\n\n  var td2 = document.createElement("td");\n  var td3 = document.createElement("td");\n  var td4 = document.createElement("td");\n  var td5 = document.createElement("td");\n  td5.classList.add("td-sla-again");\n  var btn_again = document.createElement("input");\n  btn_again.setAttribute("type", "button");\n  btn_again.setAttribute("value", "ReAgain");\n  btn_again.setAttribute("id", consts.ID_AGAIN_BTN_SLA_ + problem_name);\n  btn_again.classList.add("btn"); //btn_again.classList.add("btn-secondary");\n\n  btn_again.classList.add("btn-sla-again");\n  btn_again.addEventListener("click", _click_js__WEBPACK_IMPORTED_MODULE_0__["click_again_btn_sla"]);\n  td5.appendChild(btn_again);\n  var td6 = document.createElement("td");\n  td6.classList.add("td-sla-delete");\n  var btn_del = document.createElement("input");\n  btn_del.setAttribute("type", "button");\n  btn_del.setAttribute("value", "Delete");\n  btn_del.setAttribute("id", consts.ID_DEL_BTN_SLA_ + problem_name);\n  btn_del.classList.add("btn");\n  btn_del.classList.add("btn-secondary");\n  btn_del.classList.add("btn-sla-delete");\n  btn_del.addEventListener("click", _click_js__WEBPACK_IMPORTED_MODULE_0__["click_del_btn_sla"]);\n  td6.appendChild(btn_del);\n  tr.appendChild(td1);\n  tr.appendChild(td2);\n  tr.appendChild(td3);\n  tr.appendChild(td4);\n  tr.appendChild(td5);\n  tr.appendChild(td6); // Solve Later Againのtbodyに、tr要素を追加する\n\n  var root_div = document.getElementById(consts.ID_SLA_ROOT);\n  var tbody = root_div.getElementsByTagName("tbody")[0];\n  tbody.appendChild(tr);\n  initialize_problem_status(problem_name);\n} //[END function]\n//[START function]\n\nfunction initialize_problem_status(problem_name) {\n  /* SLAテーブルの指定の問題の状態を初期化する */\n  var target_tr = document.getElementById(consts.ID_TR_SLA_ + problem_name);\n  var tds = target_tr.getElementsByTagName("td"); // solved1\n\n  tds[1].textContent = null; // 子要素を全て削除\n\n  var chkbox1 = document.createElement("input");\n  chkbox1.setAttribute("type", "checkbox");\n  chkbox1.setAttribute("id", consts.ID_CHKBOX_SOLVED1_SLA_ + problem_name);\n  chkbox1.addEventListener("click", _click_js__WEBPACK_IMPORTED_MODULE_0__["click_chkbox_solved_sla"]);\n  tds[1].appendChild(chkbox1);\n  chkbox1.checked = false;\n  chkbox1.disabled = false; // solved2\n\n  tds[2].textContent = null;\n  var chkbox2 = document.createElement("input");\n  chkbox2.setAttribute("type", "checkbox");\n  chkbox2.setAttribute("id", consts.ID_CHKBOX_SOLVED2_SLA_ + problem_name);\n  chkbox2.addEventListener("click", _click_js__WEBPACK_IMPORTED_MODULE_0__["click_chkbox_solved_sla"]);\n  tds[2].appendChild(chkbox2);\n  chkbox2.checked = false;\n  chkbox2.disabled = true; // solved3\n\n  tds[3].textContent = null;\n  var chkbox3 = document.createElement("input");\n  chkbox3.setAttribute("type", "checkbox");\n  chkbox3.setAttribute("id", consts.ID_CHKBOX_SOLVED3_SLA_ + problem_name);\n  chkbox3.addEventListener("click", _click_js__WEBPACK_IMPORTED_MODULE_0__["click_chkbox_solved_sla"]);\n  tds[3].appendChild(chkbox3);\n  chkbox3.checked = false;\n  chkbox3.disabled = true;\n} //[END function]\n//[START function]\n\nfunction strdate2date(dt_str) {\n  /* 文字列の日付をDate型に変換して返す \r\n  (例) dt_str = "2019/6/27(Thu)"\r\n  */\n  dt_str = dt_str.split(\'(\')[0];\n  var dts = dt_str.split(\'/\');\n  var dt = new Date();\n  dt.setFullYear(Number(dts[0]));\n  dt.setMonth(Number(dts[1]) - 1);\n  dt.setDate(Number(dts[2]));\n  return dt;\n} //[END function]\n//[START function]\n\n\nfunction hilight_problems() {\n  /* 規定の日数を経過したSLAテーブルの問題をハイライトする */\n  var today = new Date();\n  today.setHours(23);\n  today.setMinutes(59);\n  today.setSeconds(59); // SLAテーブルの各問題を走査する\n\n  var root_div = document.getElementById(consts.ID_SLA_ROOT);\n  var tbody = root_div.getElementsByTagName("tbody")[0];\n  var trs = tbody.getElementsByTagName("tr");\n\n  var _loop = function _loop(i) {\n    var problem_name = trs[i].getAttribute("id").slice(consts.ID_TR_SLA_.length);\n    var tds = trs[i].getElementsByTagName("td"); // Solved 1をチェックする\n\n    var chkbox = document.getElementById(consts.ID_CHKBOX_SOLVED1_SLA_ + problem_name);\n\n    if (chkbox !== null && chkbox.disabled === false) {\n      // Soved1をまだチェックしていないので、何もしない\n      return "continue";\n    }\n\n    var hilight_if_needed = function hilight_if_needed(solved_num, need_msec) {\n      /* SLAテーブルの問題を、日数が経過していればハイライトする */\n      var chkbox = document.getElementById("chkbox_solved" + String(solved_num) + "_sla_" + problem_name);\n\n      if (chkbox !== null && chkbox.disabled === false) {\n        // このSovedをまだチェックしていないので、前のSolvedの日付と比較する\n        var dt_str = document.getElementById("date_solved" + String(solved_num - 1) + "_sla_" + problem_name).innerText;\n        var dt = strdate2date(dt_str); //const dt = strdate2date("2019/6/1(Hoge)");  // テスト用\n\n        if (today - dt >= need_msec) {\n          // 経過しているのでハイライト\n          var target_tr = document.getElementById(consts.ID_TR_SLA_ + problem_name);\n          target_tr.style.backgroundColor = consts.HILIGHT_CLR_TR;\n          tds[solved_num].style.backgroundColor = consts.HILIGHT_CLR_TD;\n          return true;\n        }\n\n        return false;\n      }\n    }; // Solved 2をチェックする\n\n\n    var result = hilight_if_needed(2, 60 * 60 * 24 * consts.SOLVED2_DAYS * 1000);\n\n    if (result) {\n      return "continue";\n    } // Solved 3をチェックする\n\n\n    result = hilight_if_needed(3, 60 * 60 * 24 * consts.SOLVED3_DAYS * 1000);\n\n    if (result) {\n      return "continue";\n    }\n  };\n\n  for (var i = 0; i < trs.length; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === "continue") continue;\n  }\n} //[END function]\n//[START function]\n\nfunction unhilight_problem(problem_name, solved_num) {\n  /* SLAテーブルの指定の問題のハイライトを解除する */\n  var target_tr = document.getElementById(consts.ID_TR_SLA_ + problem_name);\n  target_tr.style.backgroundColor = "";\n  var tds = target_tr.getElementsByTagName("td");\n  tds[solved_num].style.backgroundColor = "";\n} //[END function]\n\n//# sourceURL=webpack:///./src/dom_operations.js?')}});